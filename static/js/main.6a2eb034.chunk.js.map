{"version":3,"sources":["firebase.js","components/MenuPopupState.js","Post.js","PostThumb.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","MenuPopupState","props","popupState","usePopupState","variant","popupId","bindTrigger","aria-controls","aria-haspopup","Menu","bindMenu","MenuItem","onClick","close","functiontopass","bind","datatopass","labeltopass","topmenu","user","signout","signoutlabel","signin","signinlabel","signup","signuplabel","lang","Post","postId","username","caption","imageUrl","imagename","viewwhichuser","useState","comments","setComments","comment","setComment","componentDecorator","href","text","key","target","rel","deleteComment","commentToDel","collection","doc","where","get","then","querySnapshot","forEach","ref","delete","viewtheirstuff","userselected","document","body","scrollTop","documentElement","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","this","currentUser","displayName","email","style","color","console","log","catch","error","child","includes","width","max-width","controls","autoplay","loop","muted","playsinline","type","display","alignItems","fontWeight","marginLeft","timestamp","placeholder","value","onChange","e","disable","event","preventDefault","add","FieldValue","serverTimestamp","PostThumb","preload","ImageUpload","closemodal","viewsinglepost","image","setImage","progress","setProgress","setCaption","max","files","backgroundColor","border","Button","name","put","on","Math","round","bytesTransferred","totalBytes","alert","message","getDownloadURL","url","backToTop","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","palette","background","boxShadow","shadows","padding","spacing","Spinner","locale","getUserLocale","App","classes","modalStyle","posts","setPosts","open","setOpen","openImageUpload","setOpenImageUpload","openSignIn","setOpenSignIn","setUsername","password","setPassword","setEmail","setUser","viewmine","setViewMine","setViewWhichUser","setViewSinglePost","singlepostid","setSinglePostId","setLang","toggleLang","home","onAuthStateChanged","authUser","id","post","Modal","onClose","height","Input","createUserWithEmailAndPassword","updateProfile","signInWithEmailAndPassword","signOut","filter","offset","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","marginTop","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a2eb034.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBYfFdtRFdaxgZCXjfgxzbE_JwkaxVnsUM\",\n  authDomain: \"insta-a7137.firebaseapp.com\",\n  projectId: \"insta-a7137\",\n  storageBucket: \"insta-a7137.appspot.com\",\n  messagingSenderId: \"214576447464\",\n  appId: \"1:214576447464:web:788a17f6630b86db07ee5d\",\n  measurementId: \"G-STG1DZBMQK\"\n\n});\n\nvar db = firebaseApp.firestore();\nvar auth=firebaseApp.auth();\nvar storage=firebaseApp.storage()\n\n\nexport { db ,auth,storage};\n","import * as React from 'react'\nimport \"./../Post.css\"\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {\n  usePopupState,\n  bindTrigger,\n  bindMenu,\n} from 'material-ui-popup-state/hooks'\n\n\n\n\nconst MenuPopupState = (props) => {\n  const popupState = usePopupState({ variant: 'popover', popupId: 'demoMenu' })\n  return (\n    <div>\n      <MoreVertIcon variant=\"contained\" {...bindTrigger(popupState)}  aria-controls=\"fade-menu\" aria-haspopup=\"true\" />\n      <Menu {...bindMenu(popupState)}>\n        <MenuItem onClick={popupState.close}>\n          <span onClick={props.functiontopass.bind(this, props.datatopass)}>{props.labeltopass}</span>\n        </MenuItem>\n        {\n          props.topmenu && (\n            (props.topmenu && props.user) ? (\n              <MenuItem onClick={popupState.close}>\n                <span onClick={props.signout}>{props.signoutlabel}</span>\n              </MenuItem>\n            ) : (\n              <div>\n                <MenuItem onClick={popupState.close}>\n                  <span onClick={props.signin}>{props.signinlabel}</span>\n                </MenuItem>\n                <MenuItem onClick={popupState.close}>\n                  <span onClick={props.signup}>{props.signuplabel}</span>\n                </MenuItem>\n              </div>\n            )\n          )\n        }\n        <MenuItem onClick={popupState.close}>\n          <span><strong>{props.lang ? \"ANNULER\":\"CANCEL\"}</strong></span>\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n\nexport default MenuPopupState","import React, { useEffect, useState } from 'react'\nimport \"./Post.css\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport { db, auth } from './firebase';\nimport firebase from 'firebase';\nimport MenuPopupState from \"./components/MenuPopupState\";\nimport Textarea from 'react-expanding-textarea';\nimport Linkify from 'react-linkify';\n\nfunction Post({lang, postId, username, user, caption, imageUrl, imagename, viewwhichuser}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState([]);\n\n    // Added this to make Linkify links open up in a new tab by default, and add the other AODA necessary parameters as well\n    const componentDecorator = (href, text, key) => (\n        <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n            {text}\n        </a>\n    );\n\n    // What follows is for comments under a post, when a change is made, it refreshes\n    useEffect(() => {\n        let unsubscribe;\n        if (postId) {\n            unsubscribe = db\n                .collection(\"posts\")\n                .doc(postId)\n                .collection(\"comments\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot((snapshot) => {\n                    setComments(snapshot.docs.map((doc) => doc.data()));\n                })\n        }\n\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n        event.preventDefault();\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n            text: comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n        setComment('');\n            \n    }\n\n    function deletePost(postId) {\n        // event.preventDefault();\n        \n        db.collection(\"posts\").doc(postId).delete().then(function() {\n            console.log(\"Document successfully deleted!\");\n        }).catch(function(error) {\n            console.log(\"Error removing document: \", error);            \n        });\n        // Get a reference to the storage service, which is used to create references in your storage bucket\n        var storage = firebase.storage();\n\n        // Create a storage reference from our storage service\n        var storageRef = storage.ref();\n\n        // Create a reference to the file to delete\n        var desertRef = storageRef.child('images/'+imagename);\n\n        // Delete the file\n        desertRef.delete().then(function() {\n        // File deleted successfully\n    \n        }).catch(function(error) {\n        // Uh-oh, an error occurred!\n\n        });\n\n    }\n\n\n    function deleteComment(commentToDel) {\n\n        // Spent a whole fucking night and most of an afternoon trying to figure this one out!!!!\n    \n        db.collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .where(\"timestamp\", \"==\", commentToDel)\n        .get()\n        .then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n      \n            doc.ref.delete(); \n      \n          });\n        });\n      \n      }\n\n    function backtotop(){\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    // Function to view others' posts\n    function viewtheirstuff(userselected) { \n        viewwhichuser(userselected);\n        backtotop();\n    }\n\n     \n    return (\n        <div className=\"post\">\n            <div className=\"post__header\">\n                <Avatar \n                    className=\"post__avatar\"\n                    alt={username}\n                    src=\"/static/images/avatar/1.jpg\"\n                    onClick={viewtheirstuff.bind(this, username) }\n                />\n                <div className=\"post__username\" onClick={viewtheirstuff.bind(this, username)}>\n                    <h3>{username} </h3>\n                </div>\n                {\n                    ( user && username === auth.currentUser.displayName || user && auth.currentUser.email === \"admin@gmail.com\" )\n                    &&\n                    <div className=\"delete__Post\" style={{color:'#f2f2f2'}}>\n                    {/* This is where the 3 dots menu appear to delete POSTS */}\n                        <MenuPopupState\n                            lang={lang}\n                            datatopass={postId}\n                            functiontopass={deletePost}\n                            labeltopass={lang ? \"इस पोस्ट को मिटायें\":\"Delete this post\"}\n                        />\n                    </div>\n\n                }\n                \n            </div>\n\n            <div className=\"post__imgcontainer\">\n\n                { \n                // Check if the image is a video instead of an image, and if so, use the VIDEO tag instead\n                (imageUrl.includes(\".mp4\")) || (imageUrl.includes(\".MP4\")) || (imageUrl.includes(\".mov\")) || (imageUrl.includes(\".MOV\")) \n                ? \n                    (\n                    <video width=\"100%\" max-width=\"500\" controls=\"true\" autoplay=\"true\" loop=\"true\" muted=\"true\" playsinline=\"true\">\n                        <source src={imageUrl} type='video/mp4'></source>\n                        Your browser does not support the video tag.\n                    </video>\n                    )\n                    : \n                    (\n                    // If it is NOT a video, load it as an image:\n                    <img className=\"post__image\" src={imageUrl} alt=\"\" />\n                    )\n                }\n\n            </div>            \n            \n            \n           \n            <h4 className=\"post__text breakfix\">\n                {\n                caption && // Only if the caption field is NOT empty, display it along with the user name\n                    <Linkify componentDecorator={componentDecorator}>\n                    <div style={{display:'flex',alignItems:'center'}}>\n                    <strong onClick={viewtheirstuff.bind(this, username)}>{username}</strong><h5 style={{fontWeight:'lighter',marginLeft:'5px'}}>{caption}</h5>\n                    </div>\n                    </Linkify>\n                }\n            </h4>\n            \n            <div className=\"post__comments\">\n                {comments.map((comment) => (\n\n\n                    <div className=\"comment_container\">\n\n                        <p className=\"post__comment breakfix\">\n                            <Linkify componentDecorator={componentDecorator}>\n                                <strong onClick={viewtheirstuff.bind(this, comment.username)}>\n                                    {comment.username}\n                                </strong> {comment.text}\n                            </Linkify>\n                            \n                        </p>\n                        <div className=\"delete__CommentButton\" >\n                            {\n                                ( user && comment.username === auth.currentUser.displayName || user && auth.currentUser.email === \"admin@gmail.com\" )\n                                &&\n                                <div className=\"comment__morevert\" style={{color:'#f2f2f2'}}>\n                                    \n                                    {/* This is where the 3 dots menu appear to delete comments */}\n                                    <MenuPopupState \n                                        lang={lang}\n                                        datatopass={comment.timestamp}\n                                        functiontopass={deleteComment}\n                                        labeltopass={lang ? \"इस टिप्पणी को हटाएं\":\"Delete this comment\"}\n                                    />\n                                </div>\n                            } \n                        </div>\n                    </div>\n\n                   \n                ))}\n            </div>\n\n\n                {user && ( // Only display this comment form input if the user has logged in\n                    <form className=\"post__commentBox\">\n                        <Textarea\n                            className=\"post__input\"\n                            type=\"text\"\n                            placeholder={lang ? \"एक टिप्पणी जोड़ने\":\"Add a comment\"}\n                            value={comment}\n                            onChange={(e) => setComment(e.target.value)}\n                        />\n\n                        <button \n                            className=\"post__button\"\n                            disable={!comment}\n                            type=\"submit\"\n                            onClick={postComment}\n                        >\n                            {lang ? \"पद\":\"Post\"}\n                        </button>\n                    </form>\n                )}\n        </div>\n    )\n}\n\nexport default Post\n","import React from 'react'\nimport \"./Post.css\"\n\nfunction PostThumb({postId, imageUrl}) {\n \n\n    return (\n            \n            <div className=\"post__thumbcontainer\">\n \n            { \n            // Check if the image is a video instead of an image, and if so, use the VIDEO tag instead\n            (imageUrl.includes(\".mp4\")) || (imageUrl.includes(\".MP4\")) || (imageUrl.includes(\".mov\")) || (imageUrl.includes(\".MOV\")) \n            ? \n                (\n                <div className=\"post__thumb\">\n                    <video width=\"100%\" preload=\"metadata\" src={imageUrl+\"#t=0.1\"}>\n                        <source src={imageUrl} type='video/mp4'></source>\n                        Your browser does not support the video tag.\n                    </video>\n                </div>\n                )\n                : \n                (\n                // If it is NOT a video, load it as an image:\n                <div className=\"post__thumb\">\n                    <img className=\"post__image\" src={imageUrl} alt=\"\" />\n                </div>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default PostThumb\n","import React, { useState } from 'react'\nimport { Button } from \"@material-ui/core\"\nimport firebase from \"firebase\"\nimport { storage, db } from \"./firebase\"\nimport './ImageUpload.css'\nimport Textarea from 'react-expanding-textarea'\n\nfunction ImageUpload({lang, username, closemodal, viewwhichuser, viewsinglepost}) {\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        // this will pick the FIRST file selected (to avoid selecting many)\n        if (e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    }\n\n    const handleUpload = () => {\n        // This is what uploads the image to Firebase\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        \n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                // progress function\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress)\n            },\n            (error) => {\n                // Error function\n                console.log(error);\n                alert(error.message);\n            },\n            () => {\n                // complete function ...\n                storage\n                    .ref(\"images\")\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then(url => {\n                        // Post image URL inside db\n                        db.collection(\"posts\").add({\n                            // timestamp is used here to figure out the time the image was uploaded, which is gonna determine the order in which we display the posts (latest at the top)\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            caption: caption,\n                            imageUrl: url,\n                            username: username,\n                            imagename: image.name\n                        });\n\n                        // Reset everything once upload process is completed\n                        setProgress(0);\n                        setCaption(\"\");\n                        setImage(null);\n                        closemodal(false);\n\n                        // Scroll back to top and reset other states so that it goes back to default list\n                        document.body.scrollTop = 0; // For Safari\n                        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n                        viewwhichuser('');\n                        viewsinglepost(false);\n                    })\n            }\n        )\n    }\n\n\n    return (\n        <div className=\"imageupload\">\n            <h1>{lang}</h1>\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\n            <br /><br />\n            <Textarea type=\"text\" placeholder={lang ? 'एक कैप्शन दर्ज करें ...':'Enter a caption...'} onChange={event => setCaption(event.target.value)}/>\n            <input type=\"file\" onChange={handleChange} style={{backgroundColor:'#2f2f2f',border:'none'}}/>\n            <Button onClick={handleUpload} style={{color:'white'}}>\n                {lang ? \"डालना\":\"Upload\"} \n            </Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n","import React, { useState, useEffect} from 'react'\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport './App.css';\nimport Post from \"./Post\";\nimport PostThumb from \"./PostThumb\";\nimport { db, auth } from \"./firebase\";\nimport {makeStyles } from '@material-ui/core/styles';\nimport {Modal} from '@material-ui/core';\nimport {Button, Input} from '@material-ui/core';\nimport ImageUpload from \"./ImageUpload\"\nimport InstagramEmbed from 'react-instagram-embed';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LazyLoad from \"react-lazyload\";\nimport MenuPopupState from \"./components/MenuPopupState\"\nimport getUserLocale from 'get-user-locale'\nimport HomeIcons from '@material-ui/icons/Home'\n\nfunction backToTop(){\n  document.body.scrollTop = 0; // For Safari\n  document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n}\n\nfunction getModalStyle() {\n  const top = 50; \n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst Spinner = () => (\n  <div className=\"post loading\">\n    <img alt=\"Loading...\" src=\"https://i.gifer.com/ZZ5H.gif\" width=\"20\" />\n    <h5>Loading...</h5>\n  </div>\n);\n\n\n// Determine language from the user's computer or browser\n\nconst locale =() => {\n  \n  if (getUserLocale().includes(\"fr\")) {\n    return(true)\n  } else {\n    return(false)\n  }\n}\n\nfunction App() {\n\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openImageUpload, setOpenImageUpload] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null);\n  const [viewmine, setViewMine] = useState(false);\n  const [viewwhichuser, setViewWhichUser] = useState('');\n  const [viewsinglepost, setViewSinglePost] = useState(false);\n  const [singlepostid, setSinglePostId] = useState('');\n  const [lang, setLang] = useState(locale);\n\n  // This is to toggle from FR to EN\n  const toggleLang = () => setLang(!lang);\n\n\n  // The below is what checks if you are logged in or not, and keeps you logged in on refresh\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // if user has logged in...\n        setUser(authUser);\n\n      } else {\n        // if user has logged out... \n        setUser(null);\n      }\n      \n    })\n\n    return () => {\n      // perform some cleanup actions\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  useEffect(() => {\n      // This is where the code runs\n      db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        // every time a new post is added, this code fires up\n        setPosts(snapshot.docs.map(doc => ({\n          id: doc.id,\n          post: doc.data()\n        })));\n      })\n  }, []);\n\n  // To automatically change language text desc - Not necessary for now actually\n/*   useEffect((toggleLang) => {\n        // To toggle lang\n        if (lang) {\n          // If user clicked Hindi\n          setLang(\"Hindi\")\n          console.log(lang)\n        } else {\n          setLang(\"EN\")\n          console.log(lang)\n        }  \n  })\n */\n  const signUp = (event) => {\n\n    // This is to prevent the page from refreshing when we submit the form\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      return authUser.user.updateProfile({\n        displayName: username\n      })\n    })\n    .catch((error) => alert(error.message));\n\n    // Set user so that footer changes accordingly\n    \n\n    // Close modal\n    setOpen(false);\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n    \n    // Close modal\n    setOpenSignIn(false);\n  }\n\n  function home() {\n    setViewMine(false); \n    setViewWhichUser(''); \n    setViewSinglePost(false); \n    backToTop();    \n  }\n\n\n  return (\n    <div className=\"app\">\n\n      <Modal  \n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img \n                className=\"app__headerImage\"\n                height=\"100px;\"\n                width=\"900px\"\n                src=\"insta.png\"\n                alt=\"\"\n              />\n            </center>\n\n            <Input \n              type=\"text\"\n              placeholder={lang ? \"उपयोगकर्ता नाम\":\"username\"}\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            /> \n            <Input \n              placeholder={lang ? \"ईमेल\":\"email\"}\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder={lang ? \"पारण शब्द\":\"password\"}\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>{lang ? \"Inscrivez-vous\":\"Sign Up\"}</Button>\n\n          </form>\n\n        </div>\n      </Modal>\n\n      <Modal  \n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img \n                className=\"app__headerImage\"\n                src=\"insta.png\"\n                height=\"40px;\"\n                alt=\"\"\n              />\n            </center>\n\n            <Input \n              placeholder={lang ? \"ईमेल\":\"email\"}\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder={lang ? \"पारण शब्द\":\"password\"}\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>{lang ? \"साइन इन\":\"Sign In\"}</Button>\n\n          </form>\n\n        </div>\n      </Modal>\n\n      <header className=\"app__header\">\n        <img \n          className=\"app__headerImage\"\n          src=\"insta.png\"\n          height=\"40px;\"\n          alt=\"\"\n        />\n\n        <div className=\"app__loginContainer\">\n\n              <div className=\"loginLeft\">\n                { user ? (\n                  <Button onClick={() => auth.signOut()}>{lang ? \"लॉग आउट\":\"Logout\"}</Button>\n                ) : (\n                  <Button onClick={() => toggleLang()}>{lang ? \"EN\":\"हिन्दी\"}</Button>\n                )\n                }\n                \n                \n             </div>\n\n            <div className=\"loginRight\">\n              <Button  aria-controls=\"fade-menu\" aria-haspopup=\"true\" > \n                <MenuPopupState \n                  topmenu={true}\n                  lang={lang}\n                  user={user}\n                  functiontopass={toggleLang}\n                  labeltopass={lang ? \"English Version\" : \"हिन्दी Version\"}\n                  signout={() => auth.signOut()}\n                  signoutlabel={lang ? \"लॉग आउट\":\"Logout\"}\n                  signin={() => setOpenSignIn(true)}\n                  signinlabel={lang ? \"साइन इन\" : \"Sign In\"}\n                  signup={() => setOpen(true)}\n                  signuplabel={lang ? \"साइन अप\" : \"Sign Up\"}\n                />\n              </Button>\n\n            </div>\n\n          </div>\n        \n\n      </header>\n\n        <div className=\"app__posts\">\n          <div className=\"app__postsLeft\">\n            {\n            // If \"View my own posts button was clicked AND user is logged in\"\n            (viewmine && user)  ? (\n              \n              <div className=\"post__thumbs\">\n              \n             {\n\n              posts.filter(({id, post}) => post.username === auth.currentUser.displayName).map(({id, post}) => (\n                \n                // added te below div so that if anyone clicks on this it will set a variable to enable view on a single post\n                \n                <LazyLoad \n                  key={id}\n                  height={100}\n                  offset={[-100, 100]}\n                  placeholder={<Spinner />}\n                  >\n                    <div onClick={() => {setViewSinglePost(true); setSinglePostId(id); setViewMine(false); setViewWhichUser(null); backToTop(); }}>\n                      <PostThumb \n                          key={id}\n                          lang={lang}\n                          postId={id}\n                          user={user}\n                          username={post.username}\n                          caption={post.caption}\n                          imageUrl={post.imageUrl}\n                      />\n                    </div>\n                  </LazyLoad>\n\n\n               ))}\n              </div>\n\n\n              ) : (viewwhichuser)  ? ( // If we want to see other people's list of posts\n                              \n                  <div className=\"post__thumbs\">\n                  \n                {\n\n                  posts.filter(({id, post}) => post.username === viewwhichuser).map(({id, post}) => (\n                    \n                    <LazyLoad \n                    key={id}\n                    height={100}\n                    offset={[-100, 100]}\n                    placeholder={<Spinner />}\n                    >\n                      <div onClick={() => {setViewSinglePost(true); setSinglePostId(id); setViewMine(false); setViewWhichUser(null); backToTop(); }}>\n                        <PostThumb \n                            key={id}\n                            lang= {lang}\n                            postId={id}\n                            user={user}\n                            username={post.username}\n                            caption={post.caption}\n                            imageUrl={post.imageUrl}\n                        />\n                      </div>\n                    </LazyLoad> \n                    // added te below div so that if anyone clicks on this it will set a variable to enable view on a single post\n\n\n                  ))}\n                  </div>\n                          \n\n            ) : viewsinglepost ? ( \n\n              // If a single post was selected\n        \n              posts.filter(({id, post}) => id === singlepostid).map(({id, post}) => (\n                <Post \n                    key={id}\n                    lang={lang}\n                    postId={id}\n                    user={user}\n                    username={post.username}\n                    caption={post.caption}\n                    imageUrl={post.imageUrl}\n                    imagename={post.imagename}\n                    viewwhichuser={setViewWhichUser}\n                    viewsinglepost={setViewSinglePost}\n                />                             \n              ))\n                  \n            ) : (\n\n              // Else if no posts were selected at all, simply default to display all posts as usual\n            \n              posts.map(({id, post}) => (\n\n                <LazyLoad \n                  key={id}\n                  height={100}\n                  offset={[-100, 100]}\n                  placeholder={<Spinner />}\n                  >\n                    <Post \n                        key={id}\n                        lang={lang}\n                        postId={id}\n                        user={user}\n                        username={post.username}\n                        caption={post.caption}\n                        imageUrl={post.imageUrl}\n                        imagename={post.imagename}\n                        viewwhichuser={setViewWhichUser}\n                        viewsinglepost={setViewSinglePost}\n                    />  \n                  </LazyLoad>\n\n              ))\n\n            )\n            }\n\n          </div>\n          <div className=\"app__postsRight no-mobile\">\n            <InstagramEmbed\n              className=\"floating\"\n              url=\"https://instagr.am/p/CAX8psZMEdL_Lkto_rA_8oIhfVE1IJNLUobpkc0/\"\n              maxWidth={320}\n              hideCaption={false}\n              containerTagName=\"div\"\n              protocol=\"\"\n              injectScript\n              onLoading={() => {}}\n              onSuccess={() => {}}\n              onAfterRender={() => {}}\n              onFailure={() => {}}\n            />\n\n          </div>\n        </div>\n\n      <footer className=\"footer\">\n\n        {/* This is where people can upload stuff */}\n        {/* below line used to be user?.displayName ? (  - but it was giving issues so i changed it */}\n        {user ? (\n\n          <div>\n            <Modal  \n              open={openImageUpload}\n              onClose={() => setOpenImageUpload(false)}\n            >\n              <ImageUpload \n                lang={lang}\n                username={user.displayName} \n                closemodal={setOpenImageUpload} \n                // Passing the 2 below so that I can reset those once upload is done\n                viewwhichuser={setViewWhichUser}\n                viewsinglepost={setViewSinglePost}\n\n              />\n            </Modal>\n            \n\n            <div className=\"footer__icons\" style={{marginTop:'-1px',backgroundColor:'#2f2f2f'}} >\n              <div className=\"footer__left\">\n                <HomeIcons style={{color:'#f3f3f3',fontSize:'40px'}}\n                 onClick={home} className=\"app__home\"/>         \n              </div>\n\n              <div className=\"footer__middle\">\n                <AddAPhotoIcon onClick={() => setOpenImageUpload(true)}  style={{color:'#f3f3f3',fontSize:'40px'}}\n                className=\"app__add-postImg\"/>\n              </div>\n\n              <div className=\"footer__right\">\n                  <Avatar style={{color:'#f3f3f3'}}\n                      onClick={()=> {setViewMine(true); backToTop();}} \n                      className=\"footer__avatar\"\n                      alt={username}\n                      />  \n              </div>\n            </div>\n\n          </div>\n        ): (\n          <div className=\"footer__icons\">\n              <div className=\"footer__left\">\n                <HomeIcons onClick={home} className=\"app__home\"  style={{color:'#2f2f2f'}}/>         \n              </div>\n              <div className=\"footer__middle\">\n                  <Button style={{color:'white',backgroundColor:'#2f2f2f',width:'100px'}} \n                  onClick={() => setOpenSignIn(true)}>\n                    {lang ? \"साइन इन\":\"SIGN IN\"} &nbsp;&nbsp;\n                  </Button> \n                  <Button style={{color:'white',backgroundColor:'#2f2f2f',width:'100px'}} \n                  onClick={() => setOpen(true)}>\n                    {lang ? \"साइन अप\":\"SIGN UP\"}\n                  </Button>\n                  \n              </div>\n              <div className=\"footer__right\">\n                  &nbsp;\n              </div>                       \n          </div>\n          \n        )}  \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}